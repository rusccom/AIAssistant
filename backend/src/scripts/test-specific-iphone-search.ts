import dotenv from 'dotenv';
import path from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: path.resolve(__dirname, '../../../.env') });

import { semanticSearchService } from '../services/semantic-search.service';

async function testSpecificIphoneSearch() {
  console.log('üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–û–ß–ù–´–• –ó–ê–ü–†–û–°–û–í iPhone\n');

  const testQueries = [
    // –û–±—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã
    { query: '–∞–π—Ñ–æ–Ω', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞' },
    { query: 'iPhone', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞' },
    { query: 'iPhone 15', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞' },
    
    // –ß–∞—Å—Ç–∏—á–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ
    { query: '–∞–π—Ñ–æ–Ω —á–µ—Ä–Ω—ã–π', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 2 —á–µ—Ä–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞' },
    { query: 'iPhone Black', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 2 —á–µ—Ä–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞' },
    { query: '–∞–π—Ñ–æ–Ω 256', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ 256GB' },
    { query: 'iPhone 256GB', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ 256GB' },
    
    // –û—á–µ–Ω—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ
    { query: '–∞–π—Ñ–æ–Ω —á–µ—Ä–Ω—ã–π 256', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 1 —Ç–æ—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç' },
    { query: 'iPhone 15 256GB Black', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 1 —Ç–æ—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç' },
    { query: 'iPhone 15 128GB Blue', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 1 —Ç–æ—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç' },
    { query: '–∞–π—Ñ–æ–Ω —Å–∏–Ω–∏–π 128', expectation: '–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 1 —Ç–æ—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç' },
    
    // –¢–æ—á–Ω—ã–µ SKU/–Ω–∞–∑–≤–∞–Ω–∏—è
    { query: 'IPH15-256-BLK', expectation: '–î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –ø–æ SKU' },
    { query: '256GB Black', expectation: '–¢–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–∞' }
  ];

  for (const test of testQueries) {
    console.log(`üîé –ó–∞–ø—Ä–æ—Å: "${test.query}"`);
    console.log(`üí° –û–∂–∏–¥–∞–Ω–∏–µ: ${test.expectation}`);
    
    try {
      const result = await semanticSearchService.searchProductsForBot(test.query, 'localhost');
      
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ: ${result.products.length} –≤–∞—Ä–∏–∞–Ω—Ç(–æ–≤)`);
      console.log(`ü§ñ –û—Ç–≤–µ—Ç –±–æ—Ç–∞: "${result.response}"`);
      console.log(`üîß –¢–∏–ø –ø–æ–∏—Å–∫–∞: ${result.searchType}`);
      
      if (result.products.length > 0) {
        console.log(`üì± –í–∞—Ä–∏–∞–Ω—Ç—ã:`);
        result.products.forEach((product: any, idx: number) => {
          console.log(`   ${idx + 1}. ${product.productTitle} ${product.variantTitle} - $${(product.price / 100).toFixed(2)} (similarity: ${product.similarity?.toFixed(3) || 'N/A'})`);
        });
      }
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      if (result.products.length === 1) {
        console.log(`‚úÖ –¢–û–ß–ù–´–ô –û–¢–í–ï–¢ - —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–Ω—É–ª–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä`);
      } else if (result.products.length > 1) {
        console.log(`üìã –í–´–ë–û–† - —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∞ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞ –≤—ã–±–æ—Ä`);
      } else {
        console.log(`‚ùå –ù–ò–ß–ï–ì–û –ù–ï –ù–ê–ô–î–ï–ù–û`);
      }
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error}`);
    }
    
    console.log('‚îÄ'.repeat(80));
  }
}

testSpecificIphoneSearch(); 