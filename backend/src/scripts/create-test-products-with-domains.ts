import { PrismaClient } from '@prisma/client';
import * as dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const prisma = new PrismaClient();

async function createTestProductsWithDomains() {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–º–µ–Ω–æ–≤...');

    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–æ–º–µ–Ω–∞–º–∏
        const userWithDomains = await prisma.user.findFirst({
            include: {
                domains: {
                    orderBy: { createdAt: 'asc' }
                }
            }
        });

        if (!userWithDomains || userWithDomains.domains.length === 0) {
            console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ–º–µ–Ω–∞–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤');
            return;
        }

        console.log(`–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userWithDomains.email} —Å ${userWithDomains.domains.length} –¥–æ–º–µ–Ω–∞–º–∏`);

        // –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞
        const firstDomain = userWithDomains.domains[0];
        console.log(`–°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–µ–Ω–∞: ${firstDomain.hostname}`);

        // –ü—Ä–æ—Å—Ç–æ–π —Ç–æ–≤–∞—Ä (–∫—Ä—É–∂–∫–∞)
        const mug = await prisma.product.create({
            data: {
                title: '–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –∫—Ä—É–∂–∫–∞',
                description: '–ë–µ–ª–∞—è –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –∫—Ä—É–∂–∫–∞ 350–º–ª –¥–ª—è –≥–æ—Ä—è—á–∏—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤',
                status: 'active',
                domainId: firstDomain.id,
                variants: {
                    create: {
                        title: 'Default Title',
                        price: 25000, // $250 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                        sku: 'MUG-001'
                    }
                }
            },
            include: { variants: true }
        });

        // –¢–æ–≤–∞—Ä —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ (iPhone)
        const iphone = await prisma.product.create({
            data: {
                title: 'iPhone 15',
                description: '–ù–æ–≤—ã–π iPhone 15 —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –ø–∞–º—è—Ç–∏ –∏ —Ü–≤–µ—Ç–∞–º–∏',
                status: 'active',
                domainId: firstDomain.id,
                variants: {
                    create: [
                        {
                            title: '128GB Black',
                            price: 89990000, // $899.90 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'IPH15-128-BLK'
                        },
                        {
                            title: '256GB Black',
                            price: 99990000, // $999.90 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'IPH15-256-BLK'
                        },
                        {
                            title: '128GB Blue',
                            price: 89990000, // $899.90 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'IPH15-128-BLU'
                        },
                        {
                            title: '256GB Blue',
                            price: 99990000, // $999.90 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'IPH15-256-BLU'
                        }
                    ]
                }
            },
            include: { variants: true }
        });

        // –ï—â–µ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ (–∫–æ—Ñ–µ)
        const coffee = await prisma.product.create({
            data: {
                title: '–ö–æ—Ñ–µ –ø—Ä–µ–º–∏—É–º',
                description: '–°–≤–µ–∂–µ–æ–±–∂–∞—Ä–µ–Ω–Ω—ã–µ –∫–æ—Ñ–µ–π–Ω—ã–µ –∑–µ—Ä–Ω–∞ –∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞–ø–∏—Ç–∫–∏',
                status: 'active',
                domainId: firstDomain.id,
                variants: {
                    create: [
                        {
                            title: '–≠—Å–ø—Ä–µ—Å—Å–æ',
                            price: 350, // $3.50 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'COFFEE-ESP'
                        },
                        {
                            title: '–õ–∞—Ç—Ç–µ',
                            price: 450, // $4.50 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'COFFEE-LAT'
                        },
                        {
                            title: '–ö–∞–ø—É—á–∏–Ω–æ',
                            price: 425, // $4.25 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'COFFEE-CAP'
                        },
                        {
                            title: '–ê–º–µ—Ä–∏–∫–∞–Ω–æ',
                            price: 320, // $3.20 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'COFFEE-AME'
                        }
                    ]
                }
            },
            include: { variants: true }
        });

        // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ç–æ—Ä–æ–π –¥–æ–º–µ–Ω, —Å–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏ –¥–ª—è –Ω–µ–≥–æ
        if (userWithDomains.domains.length > 1) {
            const secondDomain = userWithDomains.domains[1];
            console.log(`–°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–º–µ–Ω–∞: ${secondDomain.hostname}`);

            await prisma.product.create({
                data: {
                    title: '–ö–Ω–∏–≥–∞ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é',
                    description: '–ò–∑—É—á–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
                    status: 'active',
                    domainId: secondDomain.id,
                    variants: {
                        create: {
                            title: 'Default Title',
                            price: 4999, // $49.99 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                            sku: 'BOOK-001'
                        }
                    }
                }
            });

            await prisma.product.create({
                data: {
                    title: '–ù–∞—É—à–Ω–∏–∫–∏ Bluetooth',
                    description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ —Å —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º',
                    status: 'active',
                    domainId: secondDomain.id,
                    variants: {
                        create: [
                            {
                                title: '–ß–µ—Ä–Ω—ã–µ',
                                price: 15999, // $159.99 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                                sku: 'HEADPHONES-BLK'
                            },
                            {
                                title: '–ë–µ–ª—ã–µ',
                                price: 15999, // $159.99 –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                                sku: 'HEADPHONES-WHT'
                            }
                        ]
                    }
                }
            });
        }

        console.log('\n‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã:');
        console.log(`üì± –î–æ–º–µ–Ω "${firstDomain.hostname}":`);
        console.log(`   - ${mug.title} (${mug.variants.length} –≤–∞—Ä–∏–∞–Ω—Ç)`);
        console.log(`   - ${iphone.title} (${iphone.variants.length} –≤–∞—Ä–∏–∞–Ω—Ç–∞)`);
        console.log(`   - ${coffee.title} (${coffee.variants.length} –≤–∞—Ä–∏–∞–Ω—Ç–∞)`);

        if (userWithDomains.domains.length > 1) {
            console.log(`üì± –î–æ–º–µ–Ω "${userWithDomains.domains[1].hostname}":`);
            console.log(`   - –ö–Ω–∏–≥–∞ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é (1 –≤–∞—Ä–∏–∞–Ω—Ç)`);
            console.log(`   - –ù–∞—É—à–Ω–∏–∫–∏ Bluetooth (2 –≤–∞—Ä–∏–∞–Ω—Ç–∞)`);
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:', error);
        throw error;
    } finally {
        await prisma.$disconnect();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    createTestProductsWithDomains()
        .then(() => {
            console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
            process.exit(0);
        })
        .catch((error) => {
            console.error('üí• –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:', error);
            process.exit(1);
        });
}

export { createTestProductsWithDomains }; 