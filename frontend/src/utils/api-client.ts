/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π API –∫–ª–∏–µ–Ω—Ç –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º API endpoints –∏–∑ constants —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
import { API_ENDPOINTS } from './constants';

// –†–µ—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export { API_ENDPOINTS };

// –í development –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è webpack proxy –¥–ª—è /api/* –∑–∞–ø—Ä–æ—Å–æ–≤

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü
export const PAGES = {
    HOME: '/',
    LOGIN: '/login.html',
    REGISTER: '/register.html', 
    DASHBOARD: '/dashboard.html',
    BOT_SETTINGS: '/bot-settings.html',
    VISUAL_EDITOR: '/visual-editor.html'
} as const;

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export function getAuthToken(): string | null {
    return localStorage.getItem('authToken');
}

/**
 * –°–æ–∑–¥–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 */
export function createAuthHeaders(): HeadersInit {
    const token = getAuthToken();
    const headers: HeadersInit = {
        'Content-Type': 'application/json'
    };
    
    if (token) {
        headers['Authorization'] = `Bearer ${token}`;
    }
    
    return headers;
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 */
export async function apiRequest<T = any>(
    endpoint: string, 
    options: RequestInit = {}
): Promise<{ data: T; response: Response }> {
    const config: RequestInit = {
        ...options,
        headers: {
            ...createAuthHeaders(),
            ...options.headers
        }
    };

    // –í development webpack proxy –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç /api/* –Ω–∞ localhost:3001
    const response = await fetch(endpoint, config);
    const data = await response.json();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ 401 –æ—à–∏–±–æ–∫
    if (response.status === 401) {
        console.warn('üîì Unauthorized: clearing auth data');
        clearAuthData();
        window.location.href = PAGES.LOGIN;
        throw new Error('Unauthorized');
    }
    
    return { data, response };
}

/**
 * –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—É—Å—Ç—Ä–∞–Ω—è–µ—Ç 7 –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
 */
export function clearAuthData(): void {
    localStorage.removeItem('authToken');
    localStorage.removeItem('user');
    console.log('üóëÔ∏è Auth data cleared');
}

/**
 * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export function saveAuthData(token: string, user: any): void {
    localStorage.setItem('authToken', token);
    localStorage.setItem('user', JSON.stringify(user));
    console.log('üíæ Auth data saved');
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
 */
export function getStoredUser(): any | null {
    const userStr = localStorage.getItem('user');
    if (!userStr || userStr === 'undefined' || userStr === 'null') {
        return null;
    }
    try {
        return JSON.parse(userStr);
    } catch (e) {
        console.error("Failed to parse user from localStorage", e);
        return null;
    }
}

/**
 * –í—ã–ø–æ–ª–Ω–∏—Ç—å logout
 */
export async function performLogout(): Promise<void> {
    try {
        const token = getAuthToken();
        if (token) {
            // –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä –æ logout (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
            await fetch(API_ENDPOINTS.AUTH.LOGOUT, {
                method: 'POST',
                headers: createAuthHeaders()
            }).catch(() => {}); // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ logout –Ω–∞ backend
        }
    } finally {
        clearAuthData();
        window.location.href = PAGES.LOGIN;
    }
}
